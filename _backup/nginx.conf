user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	gzip_types *

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	# include /etc/nginx/sites-enabled/*;

	server {
	 	listen 80 default_server;
		listen [::]:80 default_server;

		root /var/www/html;

		index index.html index.htm;

		server_name _;

		error_page 404 /404.html;
		location = /404.html {
			root /var/www/html;
			internal;
		}

		location / {
			try_files $uri $uri/ $uri.html $uri.htm =404;
		}
	 	
		location ~ ^/((battleship|cooltojs|deckofcards|inspirograph|ldraw-visualizer|mandelbrot|minecraft|nfjs|NodeChat|notifier|office-test|portfolio|probe|roggle|rook|rookkeeper|site_archive|spirograph|speller|test|testing|theremin|webgl-chess|wedding|WordCloud).*) {
			proxy_pass http://13.84.128.73/$1$is_args$args;
			
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
		
			proxy_http_version 1.1;
			proxy_cache_bypass $http_upgrade;
	
		}
	}
	


	server {

		if ($host = nathanfriend.com) {
		    return 301 https://nathanfriend.io$request_uri;
		}
		if ($host = www.nathanfriend.com) {
		    return 301 https://nathanfriend.io$request_uri;
		}
		if ($host = www.nathanfriend.io) {
		    return 301 https://nathanfriend.io$request_uri;
		}

		root /var/www/html;

		index index.html index.htm;
    server_name nathanfriend.io nathanfriend.com; # managed by Certbot

		error_page 404 /404.html;
		location = /404.html {
			root /var/www/html;
			internal;
		}

		location / {
			try_files $uri $uri/ $uri.html $uri.htm =404;
		}
	 	
		location ~ ^/((battleship|cooltojs|deckofcards|inspirograph|ldraw-visualizer|mandelbrot|minecraft|nfjs|NodeChat|notifier|office-test|portfolio|probe|roggle|rook|rookkeeper|site_archive|spirograph|speller|test|testing|theremin|webgl-chess|wedding|WordCloud).*) {
			proxy_pass http://13.84.128.73/$1$is_args$args;
			
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
		
			proxy_http_version 1.1;
			proxy_cache_bypass $http_upgrade;
	
		}
	

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/nathanfriend.io-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/nathanfriend.io-0001/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot





}

	server {
    if ($host = nathanfriend.com) {
        return 301 https://nathanfriend.io$request_uri;
    } # managed by Certbot


    if ($host = nathanfriend.io) {
        return 301 https://nathanfriend.io$request_uri;
    } # managed by Certbot

    if ($host = www.nathanfriend.com) {
        return 301 https://nathanfriend.io$request_uri;
    } # added by me

    if ($host = www.nathanfriend.io) {
        return 301 https://nathanfriend.io$request_uri;
    } # added by me


	 	listen 80 ;
		listen [::]:80 ;
    server_name nathanfriend.io nathanfriend.com www.nathanfriend.io www.nathanfriend.com;
    return 404; # managed by Certbot
	# Although I manually added the two "www" server names to the line above.




	}

}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
